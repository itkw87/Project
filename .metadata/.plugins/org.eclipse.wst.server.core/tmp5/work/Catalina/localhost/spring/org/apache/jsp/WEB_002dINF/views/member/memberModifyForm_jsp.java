/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-09-12 08:27:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberModifyForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1656294608000L));
    _jspx_dependants.put("jar:file:/C:/8_FinalProject_workspace/HomeArtFinal/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;400&display=swap');\r\n");
      out.write("\r\n");
      out.write("	#button{\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		padding-top: 3%;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.logo{\r\n");
      out.write("		width:100%;\r\n");
      out.write("	}\r\n");
      out.write("	.main{\r\n");
      out.write("		width:670px;\r\n");
      out.write("		height:830px;\r\n");
      out.write("		color:black;\r\n");
      out.write("		margin: 5% auto;\r\n");
      out.write("		background-color:white;\r\n");
      out.write("		border-radius: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.memberPhoto {\r\n");
      out.write("		width: 80px;\r\n");
      out.write("		height: 80px;\r\n");
      out.write("		object-fit: cover;\r\n");
      out.write("		border-radius: 50%;\r\n");
      out.write("		margin-right: 20px;\r\n");
      out.write("		cursor:pointer;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.title{	\r\n");
      out.write("		font-size:20px;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		color:#4F8CD1;\r\n");
      out.write("		text-align:center;\r\n");
      out.write("		padding-top:5%\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	body{\r\n");
      out.write("		background-color:#EBF2FE;\r\n");
      out.write("		font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	td{	\r\n");
      out.write("		padding:20px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#btnGroup{\r\n");
      out.write("		text-align:center;\r\n");
      out.write("		padding:20px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#btnGroup *{\r\n");
      out.write("		text-align:center;		\r\n");
      out.write("		margin:10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<form action=\"memberModify.me\" method=\"post\"  enctype=\"multipart/form-data\">\r\n");
      out.write("		");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		<div class=\"main\">\r\n");
      out.write("			<div class=\"title\">\r\n");
      out.write("				일반 <span style=\"color:black;\">회원정보 수정</span><br><br>\r\n");
      out.write("			</div>\r\n");
      out.write("			<table style=\"margin:auto;\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>사진</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</td>\r\n");
      out.write("				</tr>		\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>닉네임 </td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" id=\"nickName\" name=\"nickName\" maxlength=\"16\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ loginUser.nickName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" onKeyup=\"this.value=this.value.replace( /[^a-z|A-Z|ㄱ-ㅎ|ㅏ-ㅣ|가-힣|0-9]/g,'');\" required>\r\n");
      out.write("						<div id=\"nickNameGuide\" style=\"font-size:14px;\"></div> \r\n");
      out.write("						<input type=\"hidden\" value=\"이미 사용중인 닉네임 입니다.\" size=\"22px\" style=\"border:0; color:red;\"> \r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>비밀번호</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input id=\"password1\" name=\"password1\"  class=\"password\" type=\"password\" placeholder=\"비밀번호를 입력하세요.\" maxlength=\"16\" required>\r\n");
      out.write("						<div id=\"pwResult\"></div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"left-over-cell\">비밀번호 확인</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input id=\"password2\" name=\"password2\" class=\"password\" type=\"password\" placeholder=\"비밀번호를 입력하세요.\" maxlength=\"16\" required>\r\n");
      out.write("						<div id=\"pwCheckResult\" style=\"font-size:15px;\"></div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>주소</td> \r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"address1\" id=\"address1\" class=\"address\"  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addressArr[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" size=\"25\" required/><br>\r\n");
      out.write("						<input type=\"text\" name=\"address2\" id=\"address2\" class=\"address\"  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addressArr[1]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" size=\"25\" required/><br>\r\n");
      out.write("						<input type=\"text\" name=\"address3\" id=\"address3\" class=\"address\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addressArr[2]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" size=\"25\" placeholder=\"상세주소 입력\" required/>\r\n");
      out.write("						<button type=\"button\" id=\"searchAddress\">검색</button>					\r\n");
      out.write("					</td> \r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>휴대폰</td>\r\n");
      out.write("					<td><input id=\"phoneNumber1\" name=\"phoneNumber1\" type=\"text\" maxlength=\"3\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${phoneArr[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" size=\"2px;\" onKeyup=\"this.value=this.value.replace( /[^0-9]/g,'');\" required>\r\n");
      out.write("						- <input id=\"phoneNumber2\" name=\"phoneNumber2\" type=\"text\" maxlength=\"4\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${phoneArr[1]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" size=\"4px;\" onKeyup=\"this.value=this.value.replace( /[^0-9]/g,'');\" required>\r\n");
      out.write("						- <input id=\"phoneNumber3\" name=\"phoneNumber3\" type=\"text\" maxlength=\"4\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${phoneArr[2]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" size=\"4px;\"  onKeyup=\"this.value=this.value.replace( /[^0-9]/g,'');\" required>\r\n");
      out.write("<!-- 						<input value=\"인증번호 \" style=\"border:0px; cursor: pointer; color:white; background-color:#4F8CD1;\"> -->\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>이메일 주소</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"email1\" id=\"email1\" size=\"10px\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emailArr[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" maxlength=\"12\" autocomplete=\"off\" placeholder=\"이메일 아이디\" onKeyup=\"this.value=this.value.replace( /[^a-z|A-Z|0-9]/g,'');\" required> \r\n");
      out.write("						<input id=\"at\" value=\"@\" disabled style=\"width:14px;\">\r\n");
      out.write("						<input type=\"text\" name=\"email2\" id=\"email2\" size=\"10px\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emailArr[1]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" autocomplete=\"off\" placeholder=\"이메일 주소\" onKeyup=\"this.value=this.value.replace( /[^a-z|A-Z|.]/g,'');\" required>\r\n");
      out.write("						<select class=\"custom-select\" name=\"selectEmail\" id=\"selectEmail\" required>\r\n");
      out.write("							 <option value=\"1\" selected>직접입력</option>\r\n");
      out.write("							 <option value=\"naver.com\">naver.com</option>\r\n");
      out.write("							 <option value=\"hanmail.net\">daum.net</option>\r\n");
      out.write("							 <option value=\"hanmail.net\">nate.com</option>\r\n");
      out.write("							 <option value=\"iei.co.kr\">iei.kr</option>\r\n");
      out.write("						</select>\r\n");
      out.write("							<br>				\r\n");
      out.write("							<input id=\"checkNumber\" type=\"text\" size=\"20px\" maxlength=\"6\" placeholder=\"인증번호를 입력해주세요.\" required> &nbsp;\r\n");
      out.write("							<input type=\"button\" id=\"sendEmailBtn\" value=\"인증번호 발송\" style=\"border:0px; cursor: pointer; color:white; background-color:#4F8CD1;\">\r\n");
      out.write("							<input type=\"button\" id=\"checkNumberBtn\" value=\"확인\" style=\"border:0px; cursor: pointer; color:white; background-color:#4F8CD1;\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>									\r\n");
      out.write("			</table>\r\n");
      out.write("			<br>		\r\n");
      out.write("			<hr width=\"80%\">\r\n");
      out.write("			<div id=\"btnGroup\">\r\n");
      out.write("				<input onclick = \"history.back(-1);\" style=\"border-radius:5px; width:80px; height:30px; border:0px; cursor: pointer; color:white; background-color:#4F8CD1;\" value=\"이전\">\r\n");
      out.write("				<button style=\"border-radius:5px; width:80px; height:30px; border:0px; cursor: pointer; color:white; background-color:#4F8CD1;\">확인</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("		\r\n");
      out.write("	<script>\r\n");
      out.write("		//직접입력 selectBox선택시 이메일 주소 입력창 활성화\r\n");
      out.write("		$('#selectEmail').change(function(){ \r\n");
      out.write("		  	$(\"#selectEmail option:selected\").each(function () { \r\n");
      out.write("		  		if($(this).val()== '1'){ //selectBox에서 직접입력을 선택하면 \r\n");
      out.write("		 			$(\"#email2\").val(''); 				  //직접입력 창을 한번 비워주고\r\n");
      out.write("		 			$(\"#email2\").attr(\"disabled\",false); //직접입력 input창 이용할 수 있게 속성변경\r\n");
      out.write("		 		\r\n");
      out.write("		  		}else { \r\n");
      out.write("		  			$(\"#email2\").val($(this).text()); 	  //this(selectEmail)요소의 text를 직접입력창의 value로 대입해주고\r\n");
      out.write("		  			$(\"#email2\").attr(\"readonly\",true);  //직접입력 input창 이용할 수 없게 속성변경\r\n");
      out.write("		  		} \r\n");
      out.write("		  	}); \r\n");
      out.write("		}); \r\n");
      out.write("	\r\n");
      out.write("		//닉네임 정규식 패턴(글자수)\r\n");
      out.write("		$(\"#nickName\").change(function(){\r\n");
      out.write("	    	checkNickName($('#nickName').val());\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		function checkNickName(nickName){\r\n");
      out.write("		    \r\n");
      out.write("	    	if(!/^[a-zA-Zㄱ-힣0-9]{4,16}$/.test(nickName)){            \r\n");
      out.write("	    		alert('닉네임은 한글이나 영어 혹은 숫자를 사용하여  4~16글자 사이로 작성해야 합니다.');\r\n");
      out.write("	        	$('#nickName').val('').focus();\r\n");
      out.write("	        	return false;\r\n");
      out.write("	    	}   \r\n");
      out.write("	    	return true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//닉네임 중복확인\r\n");
      out.write("		$('#nickName').change(function(){\r\n");
      out.write("\r\n");
      out.write("			var nickName = $('#nickName');\r\n");
      out.write("			\r\n");
      out.write("			if(nickName.val() != '') {\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url: 'checkNickName.me',\r\n");
      out.write("					type: 'post',\r\n");
      out.write("					data: {nickName:nickName.val()}, \r\n");
      out.write("					success: function(data){\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						if(data == \"0\"){\r\n");
      out.write("							$('#nickNameGuide').text('사용 가능한 닉네임 입니다.').css({'color':'green', 'display':'inline-block'});\r\n");
      out.write("							\r\n");
      out.write("						} else if(data == \"1\"){\r\n");
      out.write("							$('#nickNameGuide').text('이미 사용중인 닉네임 입니다.').css({'color':'red', 'display':'inline-block'});\r\n");
      out.write("							nickName.val('').focus();\r\n");
      out.write("						}\r\n");
      out.write("					},\r\n");
      out.write("					error: function(data){\r\n");
      out.write("						alert(\"통신실패\");\r\n");
      out.write("						console.log(data);\r\n");
      out.write("					}	\r\n");
      out.write("				});\r\n");
      out.write("			}		\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//비밀번호 일치 확인\r\n");
      out.write("		$('.password').on('change paste keyup', function(){			\r\n");
      out.write("			var password1 = $('#password1').val().trim()\r\n");
      out.write("			var password2 = $('#password2').val().trim()\r\n");
      out.write("			if(password1 != \"\" && password2 != \"\") {\r\n");
      out.write("				if(password1 != \"\" && password2 != \"\" && password1 != password2){\r\n");
      out.write("					$('#pwCheckResult').text('비밀번호가 일치하지 않습니다.').css('color', 'red');		\r\n");
      out.write("					$(this).focus();\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("				} else {\r\n");
      out.write("					$('#pwCheckResult').text('비밀번호가 일치합니다.').css('color', 'green');\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("				\r\n");
      out.write("		//비밀번호 정규식패턴 \r\n");
      out.write("		$(\".password\").change(function(){\r\n");
      out.write("	    	checkPassword($('.password').val());\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		function checkPassword(password){\r\n");
      out.write("	    \r\n");
      out.write("	    	if(!/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{6,16}$/.test(password)){            \r\n");
      out.write("	    		alert('비밀번호는 숫자+영문자+특수문자 조합으로 6~16자리를 입력해야 합니다.');\r\n");
      out.write("	        	$('#password1').val('').focus();\r\n");
      out.write("	        	return false;\r\n");
      out.write("	    	}   \r\n");
      out.write("	    	\r\n");
      out.write("			else if(/(\\w)\\1\\1\\1/.test(password)){\r\n");
      out.write("	        	alert('보안성을 위해 같은 문자를 4번 이상 사용하실 수 없습니다.');\r\n");
      out.write("	        	$('#password1').val('').focus();\r\n");
      out.write("	        	return false;\r\n");
      out.write("	    	}\r\n");
      out.write("	    	\r\n");
      out.write("	    	else if($('#password1').val() != '' && $('#password2').val() != ''){\r\n");
      out.write("	    		if($('#password1').val() != $('#password2').val()) {\r\n");
      out.write("		    		alert('비밀번호가 서로 일치하지 않습니다. 다시 입력하여 주십시오.');\r\n");
      out.write("		    		$('.password').val('').focus();\r\n");
      out.write("		    		return false;\r\n");
      out.write("		    	}\r\n");
      out.write("		    	\r\n");
      out.write("	    	}\r\n");
      out.write("	    	\r\n");
      out.write("		    return true;\r\n");
      out.write("		} \r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//휴대폰 번호 정규식(글자수)\r\n");
      out.write("		//휴대폰 앞 3자리\r\n");
      out.write("		$(\"#phoneNumber1\").change(function(){\r\n");
      out.write("	    	checkPhoneNumber($('#phoneNumber1').val());\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		function checkPhoneNumber(phoneNumber){\r\n");
      out.write("		    \r\n");
      out.write("	    	if(!/^[0-9-]{3,3}$/.test(phoneNumber)){            \r\n");
      out.write("	    		alert(\"휴대폰 앞 자리 번호를 모두 입력하여 주십시오.\");\r\n");
      out.write("	        	$('#phoneNumber1').val('').focus();\r\n");
      out.write("	        	return false;\r\n");
      out.write("	    	}   \r\n");
      out.write("	    	return true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//휴대폰 중간 4자리\r\n");
      out.write("		$(\"#phoneNumber2\").change(function(){\r\n");
      out.write("	    	checkPhoneNumber2($('#phoneNumber2').val());\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		function checkPhoneNumber2(phoneNumber){\r\n");
      out.write("		    \r\n");
      out.write("	    	if(!/^[0-9-]{4,4}$/.test(phoneNumber)){            \r\n");
      out.write("	    		alert(\"휴대폰 중간 자리 번호를 모두 입력하여 주십시오.\");\r\n");
      out.write("	        	$('#phoneNumber2').val('').focus();\r\n");
      out.write("	        	return false;\r\n");
      out.write("	    	}   \r\n");
      out.write("	    	return true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//휴대폰 뒤 4자리\r\n");
      out.write("		$(\"#phoneNumber3\").change(function(){\r\n");
      out.write("	    	checkPhoneNumber3($('#phoneNumber3').val());\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		function checkPhoneNumber3(phoneNumber){\r\n");
      out.write("		    \r\n");
      out.write("	    	if(!/^[0-9]{4,4}$/.test(phoneNumber)){            \r\n");
      out.write("	    		alert(\"휴대폰 마지막 자리 번호를 모두 입력하여 주십시오.\");\r\n");
      out.write("	        	$('#phoneNumber3').val('').focus();\r\n");
      out.write("	        	return false;\r\n");
      out.write("	    	}   \r\n");
      out.write("	    	return true;\r\n");
      out.write("		}	\r\n");
      out.write("		\r\n");
      out.write("		//이메일 아이디 정규식패턴\r\n");
      out.write("// 		$(\"#email1\").change(function(){\r\n");
      out.write("// 			checkEmailId($('#email1').val());\r\n");
      out.write("// 		});\r\n");
      out.write("		\r\n");
      out.write("// 		function checkEmailId(email1){\r\n");
      out.write("		    \r\n");
      out.write("// 	    	if(!/^[a-zA-Z0-9]{4,12}$/.test(email1)){            \r\n");
      out.write("// 	    		alert(\"4~12글자 사이의 이메일 ID를 입력하여 주십시오.\");\r\n");
      out.write("// 	        	$('#email1').val('').focus();\r\n");
      out.write("// 	        	return false;\r\n");
      out.write("// 	    	}   \r\n");
      out.write("// 	    	return true;\r\n");
      out.write("// 		}\r\n");
      out.write("		\r\n");
      out.write("		//첨부한 이미지파일 미리보기\r\n");
      out.write("		function readURL(input) {\r\n");
      out.write("		  if (input.files && input.files[0]) {\r\n");
      out.write("		    var reader = new FileReader();\r\n");
      out.write("		    reader.onload = function(e) {\r\n");
      out.write("		     \r\n");
      out.write("		      document.getElementById('preview').src = e.target.result;\r\n");
      out.write("		    };\r\n");
      out.write("		    reader.readAsDataURL(input.files[0]);\r\n");
      out.write("		  } else {\r\n");
      out.write("		    document.getElementById('preview').src = \"\";\r\n");
      out.write("		  }\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//카카오 주소검색 API\r\n");
      out.write("		$(\"#searchAddress\").click(function(){\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("		        oncomplete: function(data) {\r\n");
      out.write("		        	$(\"#address1\").val(data.zonecode);\r\n");
      out.write("		        	$(\"#address2\").val(data.address);\r\n");
      out.write("		        	$(\"#address3\").focus();\r\n");
      out.write("		        }\r\n");
      out.write("		    }).open();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//이메일 발송  \r\n");
      out.write("		$('#sendEmailBtn').click(function(){\r\n");
      out.write("			var emailId = $('#email1');\r\n");
      out.write("			var emailAddress = $('#email2');\r\n");
      out.write("			\r\n");
      out.write("			if(emailId.val() != '' && emailAddress.val() != '') {\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url: 'sendEmail.me',\r\n");
      out.write("					type: 'post',\r\n");
      out.write("					data: {emailId:emailId.val(), emailAddress:emailAddress.val()}, \r\n");
      out.write("					success: function(data){\r\n");
      out.write("						alert(\"인증번호가 해당 이메일로 발송되었습니다. 이메일을 확인하여 주십시오.\");\r\n");
      out.write("						\r\n");
      out.write("						$('#checkNumber').change(function(){\r\n");
      out.write("							\r\n");
      out.write("							var checkNumber = $('#checkNumber');\r\n");
      out.write("							console.log(data.checkNumber);\r\n");
      out.write("							\r\n");
      out.write("							if(checkNumber.val() == data.checkNumber) {\r\n");
      out.write("								alert(\"인증에 성공하였습니다.\");\r\n");
      out.write("								$('#sendEmailBtn').attr('type','hidden');\r\n");
      out.write("							} else{\r\n");
      out.write("								alert(\"인증에 실패 하였습니다. 다시 시도해 주세요.\");\r\n");
      out.write("								checkNumber.val('').focus();\r\n");
      out.write("							}\r\n");
      out.write("						});	\r\n");
      out.write("					},\r\n");
      out.write("					error: function(data){\r\n");
      out.write("						alert(\"통신실패\");\r\n");
      out.write("						console.log(data);\r\n");
      out.write("					}	\r\n");
      out.write("				});\r\n");
      out.write("			} else{\r\n");
      out.write("				alert(\"이메일 아이디와 이메일 주소를 모두 입력해 주십시오.\");\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /WEB-INF/views/member/memberModifyForm.jsp(77,2) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("memberHeader.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/memberModifyForm.jsp(86,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ !empty loginUser.renameFileName }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<img id=\"preview\" class=\"memberPhoto\" src=\"resources/muploadFiles/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ loginUser.renameFileName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"/>\r\n");
          out.write("							<input type=\"file\" name=\"uploadFile\" accept=\"image/*\" onchange=\"readURL(this);\"> \r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/member/memberModifyForm.jsp(90,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty loginUser.renameFileName }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<img id=\"preview\" class=\"memberPhoto\" src=\"resources/images/basicMemberPhoto.png\"/>\r\n");
          out.write("							<input type=\"file\" name=\"uploadFile\" accept=\"image/*\" onchange=\"readURL(this);\"> \r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
