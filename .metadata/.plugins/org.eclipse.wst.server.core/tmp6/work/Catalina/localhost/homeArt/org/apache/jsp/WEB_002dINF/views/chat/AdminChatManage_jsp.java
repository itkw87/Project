/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-30 09:58:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.chat;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AdminChatManage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1656294608000L));
    _jspx_dependants.put("jar:file:/C:/8_FinalProject_workspace/HomeArtChat/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("  <title>Document</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;400&display=swap');\r\n");
      out.write("\r\n");
      out.write("  * {\r\n");
      out.write("    font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .content {\r\n");
      out.write("    max-width: 1500px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  /* navbar */\r\n");
      out.write("  header {}\r\n");
      out.write("\r\n");
      out.write("  header>nav ul {\r\n");
      out.write("    background: #f5f5f5;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    box-shadow: 20px 40px 40px #00000033;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  header>nav ul a {\r\n");
      out.write("    padding: 0.6em 2em;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    z-index: 3;\r\n");
      out.write("    color: #333;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    z-index: 3;\r\n");
      out.write("    border: none;\r\n");
      out.write("    outline: none;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .color {\r\n");
      out.write("    background-color: #4F8CD1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  header>nav ul .slide1,\r\n");
      out.write("  header>nav ul .slide2 {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    height: 48px;\r\n");
      out.write("    border-radius: 10em;\r\n");
      out.write("    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1.05);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  header>nav ul .slide1 {\r\n");
      out.write("    background-color: yellowgreen;\r\n");
      out.write("    z-index: 2;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  header ul .slide2 {\r\n");
      out.write("    opacity: 0;\r\n");
      out.write("    background: #ddd;\r\n");
      out.write("    z-index: 1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  header .squeeze {\r\n");
      out.write("    transform: scale(0.9);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #usermenu-dropdown {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 0;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    width: 21rem;\r\n");
      out.write("    border: 1px solid #e1e1e1;\r\n");
      out.write("    background-color: white;\r\n");
      out.write("    transform: translateY(102%);\r\n");
      out.write("    z-index: 1021;\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #usermenu-dropdown>ul {\r\n");
      out.write("    border-top: 1px solid #e1e1e1;\r\n");
      out.write("    border-bottom: 1px solid #e1e1e1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #dropdown-chat-circle {\r\n");
      out.write("    border-bottom: 1px solid #e1e1e1;\r\n");
      out.write("    margin-top: .5rem;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .chat-circle {\r\n");
      out.write("    width: 50px;\r\n");
      out.write("    height: 50px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .chat-circle:not(:nth-child(4n)) {\r\n");
      out.write("    margin-right: 1.5rem;\r\n");
      out.write("    margin-bottom: .5rem;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #usermenu-dropdown button:nth-last-child(1) {\r\n");
      out.write("    border: 1px solid #4f8cd1;\r\n");
      out.write("    background-color: #4f8cd1;\r\n");
      out.write("    color: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #usermenu-dropdown button:nth-last-child(1):hover {\r\n");
      out.write("    box-shadow: 0px 0px 5px #4f8cd1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #profile {\r\n");
      out.write("    width: 3.7rem;\r\n");
      out.write("    height: 3.7rem;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .box-wrapper,\r\n");
      out.write("  .slide-view {\r\n");
      out.write("    transition: all 0.5s linear;\r\n");
      out.write("    transition-delay: .2s;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #page-wrap {\r\n");
      out.write("    height: 3.7rem;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #page-wrap>.pageCount {\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    width: 3.7rem;\r\n");
      out.write("    height: 3.7rem;\r\n");
      out.write("    transition: all 1s linear;\r\n");
      out.write("    background-color: #4f8cd1;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    color: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #page-wrap>.pageCount:not(:nth-child(1)) {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #notice {\r\n");
      out.write("    border: 1px solid red;\r\n");
      out.write("    width: 20rem;\r\n");
      out.write("    height: 24rem;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    z-index: 1023;\r\n");
      out.write("    right: 0;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    transform: translateY(102%);\r\n");
      out.write("    background-color: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #notice>li:not(:nth-child(1)) {\r\n");
      out.write("    border: 1px solid blue;\r\n");
      out.write("    height: 6rem;\r\n");
      out.write("    padding: 10px\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #loginModal {\r\n");
      out.write("    background-color: white;\r\n");
      out.write("    position: fixed;\r\n");
      out.write("    top: 50%;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    transform: translate(-50%, -50%);\r\n");
      out.write("    z-index: 100;\r\n");
      out.write("    width: 1000px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    box-shadow: 0px 0px 20px #e1e1e1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #loginModal .member {\r\n");
      out.write("    width: 50%;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  /* 채팅 관련 */\r\n");
      out.write("\r\n");
      out.write("  #chat-manager {}\r\n");
      out.write("\r\n");
      out.write("  #chat-manager>#chat-list {\r\n");
      out.write("    height: 240px;\r\n");
      out.write("    transition: all .6s cubic-bezier(0.3, 0.88, 0.48, 1.17);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  @keyframes chatShake-ani {\r\n");
      out.write("    0% {\r\n");
      out.write("      transform: rotate(10deg);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    50% {\r\n");
      out.write("      transform: rotate(-10deg);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("      transform: rotate(10deg);\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  @keyframes spin-ani {\r\n");
      out.write("    0% {\r\n");
      out.write("      transform: rotate(0deg);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    100% {\r\n");
      out.write("      transform: rotate(360deg);\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager>#chat-list>.chat {\r\n");
      out.write("    width: 200px;\r\n");
      out.write("    height: 200px;\r\n");
      out.write("    margin: 20px 50px;\r\n");
      out.write("    border: 5px solid #4f8cd1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  img {\r\n");
      out.write("    object-fit: cover;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager>#chat-list>.chat > svg.ani {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    z-index: 10;\r\n");
      out.write("    fill: #4f8cd1;\r\n");
      out.write("    animation: chatShake-ani .5s cubic-bezier(0.3, 0.88, 0.48, 1.17) infinite;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager>#chat-list>.chat>.spin {\r\n");
      out.write("    z-index: 2;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager>#chat-list>.chat>.spin:hover {\r\n");
      out.write("    border: 5px solid transparent;\r\n");
      out.write("    border-top: 5px solid white;\r\n");
      out.write("    animation: spin-ani 1s linear infinite;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager>#more {\r\n");
      out.write("    width: 500px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager>#more:hover {\r\n");
      out.write("    color: #4f8cd1;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .absolute-100 {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    left: 0;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 100%\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager #online-chat {\r\n");
      out.write("    width: 560px;\r\n");
      out.write("    height: 840px;\r\n");
      out.write("    border: 2px solid #4f8cd1;\r\n");
      out.write("    box-shadow: 0px 0px 10px #e1e1e1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager #my-chat-list {\r\n");
      out.write("    width: 560px;\r\n");
      out.write("    height: 840px;\r\n");
      out.write("    overflow: auto;\r\n");
      out.write("    border: 2px solid #4f8cd1;\r\n");
      out.write("    box-shadow: 0px 0px 20px #e1e1e1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager #my-chat-list>li {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 120px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .chat-profile {\r\n");
      out.write("    width: 80px;\r\n");
      out.write("    height: 80px;\r\n");
      out.write("    border: 3px solid #4f8cd1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager #my-chat-list>li>.lasted-chat {\r\n");
      out.write("    width: 300px;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("    margin-left: 40px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager #my-chat-list>li>.chat-menu {\r\n");
      out.write("    top: 10px;\r\n");
      out.write("    right: 15px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #chat-manager #my-chat-list>li>.chat-menu>.chat-dropdown {\r\n");
      out.write("    width: 200px;\r\n");
      out.write("    border: 1px solid #e1e1e1;\r\n");
      out.write("    transform: translateX(-88%);\r\n");
      out.write("    background: white;\r\n");
      out.write("    z-index: 45;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .chat-dropdown>li {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-bottom: 1px solid #e1e1e1;\r\n");
      out.write("    background: white;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #online-chat>#chat-header {\r\n");
      out.write("    height: 10%;\r\n");
      out.write("    background: #4f8cd1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #online-chat>#chat-content {\r\n");
      out.write("    height: 70%;\r\n");
      out.write("    overflow: auto;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #online-chat>#chat-content>li.left {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    margin-bottom: 40px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #online-chat>#chat-content>li.right {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: flex-end;\r\n");
      out.write("    margin-bottom: 40px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  #online-chat>#write {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    min-height: 20%;\r\n");
      out.write("    border-top: 3px solid #4f8cd1;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .left-speechAdmin {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    background-color: #4f8cd1;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    border-radius: 3px;\r\n");
      out.write("    max-width: 400px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    top: 0px;\r\n");
      out.write("    left: 11px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .left-speechAdmin:after {\r\n");
      out.write("    content: '';\r\n");
      out.write("    border-width: 10px;\r\n");
      out.write("    border-style: solid;\r\n");
      out.write("    border-color: transparent #4f8cd1 transparent transparent;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: -20px;\r\n");
      out.write("    top: 30px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .right-speechAdmin {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    background-color: #4f8cd1;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    border-radius: 3px;\r\n");
      out.write("    max-width: 400px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    top: 0px;\r\n");
      out.write("    right: 11px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .right-speechAdmin:after {\r\n");
      out.write("    content: '';\r\n");
      out.write("    border-width: 10px;\r\n");
      out.write("    border-style: solid;\r\n");
      out.write("    border-color: transparent transparent transparent #4f8cd1;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: -20px;\r\n");
      out.write("    top: 30px;\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  ");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <div id=\"chat-manager\" class=\"content mx-auto\">\r\n");
      out.write("    <div class=\"d-flex justify-content-center mt-5\">\r\n");
      out.write("     <!--  <div class=\"form-check mx-4\">\r\n");
      out.write("        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault1\">\r\n");
      out.write("        <label class=\"form-check-label\" for=\"flexCheckDefault1\">\r\n");
      out.write("          차단된 채팅\r\n");
      out.write("        </label>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-check mx-4\">\r\n");
      out.write("        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault2\">\r\n");
      out.write("        <label class=\"form-check-label\" for=\"flexCheckDefault2\">\r\n");
      out.write("          미진행 중인 채팅\r\n");
      out.write("        </label>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-check mx-4\">\r\n");
      out.write("        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked3\" checked>\r\n");
      out.write("        <label class=\"form-check-label\" for=\"flexCheckChecked3\">\r\n");
      out.write("          진행 중인 채팅\r\n");
      out.write("        </label>\r\n");
      out.write("      </div> -->\r\n");
      out.write("    </div>\r\n");
      out.write("    <hr class=\"mt-3\" />\r\n");
      out.write("    <div id=\"chat-list\" class=\"d-flex flex-wrap mx-auto overflow-hidden\">\r\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"more\" class=\"text-center fs-2 mt-4 mx-auto\">\r\n");
      out.write("      전체 보기\r\n");
      out.write("    </div>\r\n");
      out.write("    <hr class=\"mt-5\" />\r\n");
      out.write("    <div class=\"d-flex justify-content-center mt-5\">\r\n");
      out.write("      <div id=\"online-chat\" class=\"mx-auto rounded-3 overflow-hidden\">\r\n");
      out.write("        <div id=\"chat-header\" class=\"position-relative\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <ul id=\"chat-content\" class=\"list-unstyled m-0 p-3 pb-0\">\r\n");
      out.write("        ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("        <div id=\"write\" class=\"row m-0 p-2\">\r\n");
      out.write("          <div class=\"col-10 p-0\">\r\n");
      out.write("            <textarea id=\"message\" style=\"border: none; outline: none; width:100%; height: 100%; resize: none;\" class=\"px-3\"></textarea>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-2 p-0\">\r\n");
      out.write("            <button id=\"sendMessage\" type=\"button\" class=\"btn w-100 fs-5 p-2\" style=\"background: #4F8CD1\">전송</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <ul id=\"my-chat-list\" class=\"list-unstyled mx-auto rounded-3\">\r\n");
      out.write("      	");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  ");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("  var sock = new SockJS(\"http://localhost:8232/homeArt/chat-manage.ch\");\r\n");
      out.write("  var stompClient = Stomp.over(sock);\r\n");
      out.write("  var sub = null; //구독 관리를 위한 변수\r\n");
      out.write("  \r\n");
      out.write("  connect();\r\n");
      out.write("\r\n");
      out.write("  function connect(){\r\n");
      out.write("		\r\n");
      out.write("		//관리자에게 채팅방 만들었다고 알려는주는 용도의 주소\r\n");
      out.write("		var noticeChat = '/topic/noticeChat'\r\n");
      out.write("		\r\n");
      out.write("		stompClient.connect({}, function(frame){\r\n");
      out.write("			console.log('Connected: ' + frame);\r\n");
      out.write("			\r\n");
      out.write("			//가장 마지막에 참여한 채팅방과 stomp 연결-이거 왜 함수로는 안 됨?\r\n");
      out.write("			$.ajax({\r\n");
      out.write("	  			url: 'getLastedRoomNo.ch',\r\n");
      out.write("	  			success : function(data) {\r\n");
      out.write("	  				if(data != 0) {\r\n");
      out.write("	  					setChat(data);\r\n");
      out.write("	  				}\r\n");
      out.write("	  			},\r\n");
      out.write("	  			error : function(data) {\r\n");
      out.write("	  				console.log('error');\r\n");
      out.write("	  			}\r\n");
      out.write("	  		});\r\n");
      out.write("			\r\n");
      out.write("			stompClient.subscribe(noticeChat, function(response){\r\n");
      out.write("				var payload = JSON.parse(response.body);\r\n");
      out.write("				var cmd = payload.cmd;\r\n");
      out.write("				var userId = payload.id;\r\n");
      out.write("				var renameFileName = payload.renameFile;\r\n");
      out.write("				var roomNo = parseInt(payload.roomNo);\r\n");
      out.write("				console.log(payload);\r\n");
      out.write("				switch(cmd) {\r\n");
      out.write("				case 'start':\r\n");
      out.write("					//채팅방을 동적으로 화면에 보이기\r\n");
      out.write("					var chat = $('<div>');\r\n");
      out.write("					chat.addClass('chat rounded-circle overflow-hidden position-relative');\r\n");
      out.write("					\r\n");
      out.write("					var img = $('<img>');\r\n");
      out.write("					var addr = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/muploadFiles/' + renameFileName;\r\n");
      out.write("					img.addClass('absolute-100').attr('src', addr);\r\n");
      out.write("\r\n");
      out.write("					var spin = $('<div>')\r\n");
      out.write("					spin.addClass('spin rounded-circle h-100 w-100 absolute-100');\r\n");
      out.write("					\r\n");
      out.write("					var hidden = $('<input>');\r\n");
      out.write("					hidden.val(roomNo).attr('type', 'hidden');\r\n");
      out.write("					\r\n");
      out.write("					chat.prepend(hidden).prepend(spin).prepend(img);\r\n");
      out.write("					$('#chat-list').prepend(chat);\r\n");
      out.write("					break;\r\n");
      out.write("				case 'cut':\r\n");
      out.write("					//채팅 리스트에서 삭제\r\n");
      out.write("					removeChatList(roomNo, $('#chat-list input'), '.chat'); \r\n");
      out.write("					//해당 채팅방에 관리자가 있다\r\n");
      out.write("					var aih = AmIHere(roomNo);\r\n");
      out.write("					console.log('aih : ' + aih);\r\n");
      out.write("					if(AmIHere(roomNo) === true) {\r\n");
      out.write("						alert(userId + \"님이 채팅방을 닫았습니다.\");\r\n");
      out.write("						//마이 채팅 리스트에서 삭제\r\n");
      out.write("						removeChatList(roomNo, $('#my-chat-list input'), 'li');\r\n");
      out.write("						//메세지 리스트 삭제\r\n");
      out.write("						removeMessageList(roomNo);\r\n");
      out.write("						//구독 끊기\r\n");
      out.write("						if(sub != null) {\r\n");
      out.write("							sub.unsubscribe();\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("  \r\n");
      out.write("  	function AmIHere(roomNo) {\r\n");
      out.write("		var signal = false;\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: 'AmIHere.ch',\r\n");
      out.write("			data: {'roomNo' : roomNo},\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			async: false,\r\n");
      out.write("			success: function(data) {\r\n");
      out.write("				console.log(data);\r\n");
      out.write("				if(data === 1) {\r\n");
      out.write("					signal = true;\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error: function(data) {\r\n");
      out.write("				console.log(data);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		return signal\r\n");
      out.write("	}\r\n");
      out.write("  	\r\n");
      out.write("  	function removeMessageList(roomNo) {\r\n");
      out.write("  		var target = $('#chat-content').find('input').val();\r\n");
      out.write("  		console.log('target : ' + target);\r\n");
      out.write("  		if(target == roomNo) {\r\n");
      out.write("  			$('#chat-content').find('li').remove();\r\n");
      out.write("  		}\r\n");
      out.write("  	}\r\n");
      out.write("  \r\n");
      out.write("  	\r\n");
      out.write("  	function removeChatList(roomNo, hiddens, parentName) {\r\n");
      out.write("  		for(var i=0;i<hiddens.length;i++) {\r\n");
      out.write("  			if(roomNo == hiddens.eq(i).val()) {\r\n");
      out.write("  				hiddens.eq(i).parents(parentName).remove();\r\n");
      out.write("  			}\r\n");
      out.write("  		}\r\n");
      out.write("  	}\r\n");
      out.write("  \r\n");
      out.write("  	function getLastedRoomNo() {\r\n");
      out.write("  		var result;\r\n");
      out.write("  		\r\n");
      out.write("  		$.ajax({\r\n");
      out.write("  			url: 'getLastedRoomNo.ch',\r\n");
      out.write("  			success : function(data) {\r\n");
      out.write("  				result = data;\r\n");
      out.write("  			},\r\n");
      out.write("  			error : function(data) {\r\n");
      out.write("  				console.log('error');\r\n");
      out.write("  			}\r\n");
      out.write("  		});\r\n");
      out.write("\r\n");
      out.write("  		return result;\r\n");
      out.write("  	}\r\n");
      out.write("  \r\n");
      out.write("	//이벤트 버블링을 이용하여 동적으로 생긴 요소에도 이벤트를 추가한다.\r\n");
      out.write("  	$('#chat-list').off().on('click', function(event){\r\n");
      out.write("  		var chat = $(event.target).parent();\r\n");
      out.write("  		var roomNo = chat.find('input').val();\r\n");
      out.write("  		//관리자를 해당 채팅방에 추가\r\n");
      out.write("  		var result = joinAdmin(roomNo);\r\n");
      out.write("  		console.log('result : ' + result);\r\n");
      out.write("  		//관리자를 성공적으로 넣었을 시\r\n");
      out.write("  		if(result === 1) {\r\n");
      out.write("  			//동적으로 my-chat-list에 요소 추가\r\n");
      out.write("  			addMyChatList(roomNo);\r\n");
      out.write("  			//동적으로 messageList에도 말풍선 추가\r\n");
      out.write("  			showMessage(roomNo);\r\n");
      out.write("  			//해당 채팅방과 stomp 연결\r\n");
      out.write("  			setChat(roomNo);\r\n");
      out.write(" 			//참여했다고 회원에게 알림\r\n");
      out.write(" 			noticeJoin(roomNo);\r\n");
      out.write("  		}else{\r\n");
      out.write("  			alert('해당 채팅방에는 이미 참여했습니다.');\r\n");
      out.write("  		}\r\n");
      out.write("  	});\r\n");
      out.write("\r\n");
      out.write("	function noticeJoin(roomNo) {\r\n");
      out.write("		var addressName = \"/queue/\" + nameMaker(roomNo);\r\n");
      out.write("		stompClient.send(\"/app/chat-manage.ch\", {}, JSON.stringify({\r\n");
      out.write("														'roomNo': roomNo,\r\n");
      out.write("														'id': '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("														'cmd' : 'join',\r\n");
      out.write("														'address': addressName\r\n");
      out.write("														}\r\n");
      out.write("											)\r\n");
      out.write("		);\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function showMessage(roomNo) {\r\n");
      out.write("		//클릭할 때, online-chat에 나타나 있는 메세지들 지우기\r\n");
      out.write("		$('#chat-content > li').remove();\r\n");
      out.write("		\r\n");
      out.write("		//해당 번호의 메세지 리스트를 가져와서 화면에 동적으로 추가\r\n");
      out.write("		var messageList = getMyMessageList(roomNo);\r\n");
      out.write("		var userId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("		\r\n");
      out.write("		console.log('userId : ' + userId);\r\n");
      out.write("		\r\n");
      out.write("		for(var i=0;i<messageList.length;i++){\r\n");
      out.write("			var arrowClass;\r\n");
      out.write("			var speechClass;\r\n");
      out.write("			var message = messageList[0].message;\r\n");
      out.write("			\r\n");
      out.write("			makeSpeech(messageList[i], userId, '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.renameFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function makeSpeech(payload, userId, renameFileName){\r\n");
      out.write("		var src = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/muploadFiles/' + payload.renameFileName;\r\n");
      out.write("		\r\n");
      out.write("		if(payload.id === userId.trim()) {\r\n");
      out.write("			arrowClass = 'right';\r\n");
      out.write("			speechClass = 'right-speechAdmin';\r\n");
      out.write("		}else {\r\n");
      out.write("			arrowClass = 'left';\r\n");
      out.write("			speechClass = 'left-speechAdmin';\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		var li = $('<li>');\r\n");
      out.write("		li.addClass(arrowClass);\r\n");
      out.write("		\r\n");
      out.write("		var speech = $('<div>');\r\n");
      out.write("		speech.addClass(speechClass).text(payload.message);\r\n");
      out.write("		\r\n");
      out.write("		var chatProfile = $('<div>');\r\n");
      out.write("		chatProfile.addClass('chat-profile rounded-circle overflow-hidden');\r\n");
      out.write("		\r\n");
      out.write("		var img = $('<img>');\r\n");
      out.write("		img.addClass('w-100 h-100').attr('src', src);\r\n");
      out.write("		\r\n");
      out.write("		chatProfile.prepend(img);\r\n");
      out.write("		\r\n");
      out.write("		if(payload.id === userId) {\r\n");
      out.write("			li.prepend(chatProfile);\r\n");
      out.write("			li.prepend(speech);\r\n");
      out.write("		}else {\r\n");
      out.write("			li.prepend(speech);\r\n");
      out.write("			li.prepend(chatProfile);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		var hidden = $('<input>');\r\n");
      out.write("		hidden.val(payload.roomNo).attr('type', 'hidden');\r\n");
      out.write("		$(li).append(hidden);	\r\n");
      out.write("		\r\n");
      out.write("		$('#chat-content').append(li);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function getMyMessageList(roomNo) {\r\n");
      out.write("		var messageList;\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: 'getMyMessageList.ch',\r\n");
      out.write("			async: false,\r\n");
      out.write("			data: {'roomNo': roomNo},\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			dataType: 'json',\r\n");
      out.write("			success: function(data){\r\n");
      out.write("				messageList = data;\r\n");
      out.write("			},\r\n");
      out.write("			error: function(data) {\r\n");
      out.write("				console.log('error!');\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		return messageList;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//이름 만들기\r\n");
      out.write("	function nameMaker(roomNo) {\r\n");
      out.write("		return \"withAdminChat\" + roomNo;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//stomp로 실제 채팅 연결!\r\n");
      out.write("	function setChat(roomNo) {\r\n");
      out.write("		var addressName = \"/queue/\" + nameMaker(roomNo);\r\n");
      out.write("		\r\n");
      out.write("		//구독 해제. 왜냐하면 같은 주소로 넣는다 하더라도, 구독은 쌓인다. 쌓인 상태에서 send를 하면 메세지를 여러 번 받는 것.\r\n");
      out.write("		if(sub != null) {\r\n");
      out.write("			sub.unsubscribe();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		sub = stompClient.subscribe(addressName, function(response) {\r\n");
      out.write("			var payload = JSON.parse(response.body);\r\n");
      out.write("			//받아온 메세지를 동적으로 화면에 보여주기-자신이 보낸 payload도 올 수 있음.\r\n");
      out.write("			if(payload.cmd != 'join') {\r\n");
      out.write("				makeSpeech(payload, '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', payload.renameFileName);	\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#sendMessage').off().on('click', function(){\r\n");
      out.write("			var msg = $('#message').val();\r\n");
      out.write("			stompClient.send(\"/app/chat-manage.ch\", {}, JSON.stringify({\r\n");
      out.write("										'roomNo': roomNo,\r\n");
      out.write("										'id': '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("										'cmd' : 'ing...',\r\n");
      out.write("										'renameFileName' : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.renameFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("										'message' : msg,\r\n");
      out.write("										'address': addressName\r\n");
      out.write("										}\r\n");
      out.write("				)\r\n");
      out.write("			);\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function addMyChatList(roomNo) {\r\n");
      out.write("		var roomInfo = getRoomInfo(roomNo);\r\n");
      out.write("		var li = $('<li>');\r\n");
      out.write("		li.addClass('d-flex align-items-center p-4 position-relative');\r\n");
      out.write("		\r\n");
      out.write("		var chatProfile = $('<div>');\r\n");
      out.write("		chatProfile.addClass('chat-profile rounded-circle overflow-hidden');\r\n");
      out.write("		\r\n");
      out.write("		var img = $('<img>');\r\n");
      out.write("		img.addClass('w-100 h-100').attr('src', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/muploadFiles/' + roomInfo.renameFileName);\r\n");
      out.write("		\r\n");
      out.write("		var lastedChat = $('<div>');\r\n");
      out.write("		lastedChat.addClass('lasted-chat');\r\n");
      out.write("		\r\n");
      out.write("		var h = $('<h5>');\r\n");
      out.write("		h.addClass('fw-bold').text(roomInfo.nickName);\r\n");
      out.write("		\r\n");
      out.write("		var hidden = $('<input>');\r\n");
      out.write("		hidden.val(roomNo).attr('type', 'hidden');\r\n");
      out.write("		\r\n");
      out.write("		var p = $('<p>');\r\n");
      out.write("		p.text('환불 문의드립니다.'); // 이 부분은 나중에 수정해야 함.\r\n");
      out.write("		\r\n");
      out.write("		var chatMenu = $('<div>');\r\n");
      out.write("		var html = '<svg class=\"show\"width=\"20\"height=\"30\"xmlns=\"http://www.w3.org/2000/svg\"viewBox=\"0 0 448 512\"><path d=\"M0 96C0 78.33 14.33 64 32 64H416C433.7 64 448 78.33 448 96C448 113.7 433.7 128 416 128H32C14.33 128 0 113.7 0 96zM0 256C0 238.3 14.33 224 32 224H416C433.7 224 448 238.3 448 256C448 273.7 433.7 288 416 288H32C14.33 288 0 273.7 0 256zM416 448H32C14.33 448 0 433.7 0 416C0 398.3 14.33 384 32 384H416C433.7 384 448 398.3 448 416C448 433.7 433.7 448 416 448z\"/></svg><svg class=\"d-none close\"width=\"20\"height=\"30\"xmlns=\"http://www.w3.org/2000/svg\"viewBox=\"0 0 128 512\"><path d=\"M64 360C94.93 360 120 385.1 120 416C120 446.9 94.93 472 64 472C33.07 472 8 446.9 8 416C8 385.1 33.07 360 64 360zM64 200C94.93 200 120 225.1 120 256C120 286.9 94.93 312 64 312C33.07 312 8 286.9 8 256C8 225.1 33.07 200 64 200zM64 152C33.07 152 8 126.9 8 96C8 65.07 33.07 40 64 40C94.93 40 120 65.07 120 96C120 126.9 94.93 152 64 152z\"/></svg><ul class=\"chat-dropdown position-absolute d-none list-unstyled fs-4\"><li class=\"text-center\">차단</li><li class=\"text-center\">알림설정</li><li class=\"text-center\">대화끝내기</li></ul>';\r\n");
      out.write("				\r\n");
      out.write("		chatMenu.addClass('position-absolute chat-menu').html(html);\r\n");
      out.write("		\r\n");
      out.write("		chatProfile.prepend(img);\r\n");
      out.write("		chatProfile.prepend(hidden);\r\n");
      out.write("		lastedChat.prepend(p).prepend(h)\r\n");
      out.write("		li.prepend(chatMenu).prepend(lastedChat).prepend(chatProfile);\r\n");
      out.write("		\r\n");
      out.write("		//이벤트 추가해주기.\r\n");
      out.write("		addChatEvent(li);\r\n");
      out.write("		\r\n");
      out.write("		$('#my-chat-list').prepend(li);\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function getLastedMessage(roomNo) {\r\n");
      out.write("		var result;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function getRoomInfo(roomNo) {\r\n");
      out.write("		var result;\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: 'getRoomInfo.ch',\r\n");
      out.write("			async: false,\r\n");
      out.write("			data: {'roomNo': roomNo},\r\n");
      out.write("			success: function(data){\r\n");
      out.write("				result = data;\r\n");
      out.write("			},\r\n");
      out.write("			error: function(data) {\r\n");
      out.write("				console.log('error!');\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		return result;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//해당 관리자를 채탕방에 추가\r\n");
      out.write("	function joinAdmin(roomNo) {\r\n");
      out.write("		var result;\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: 'joinAdmin.ch',\r\n");
      out.write("			async: false,\r\n");
      out.write("			data: {'roomNo': roomNo},\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			success: function(data){\r\n");
      out.write("				result = data.result;\r\n");
      out.write("			},\r\n");
      out.write("			error: function(data) {\r\n");
      out.write("				console.log('error!');\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		return result;\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("  <script>    \r\n");
      out.write("    function addChatEvent(el) {\r\n");
      out.write("    	el.on('mouseover', function(event) {\r\n");
      out.write("    	      $(this).css({\r\n");
      out.write("    	    	  'background-color': '#e1e1e1'\r\n");
      out.write("    	      });\r\n");
      out.write("    	}).on('mouseout', function() {\r\n");
      out.write("    	        $(this).css({\r\n");
      out.write("    	        	'background-color': 'white'\r\n");
      out.write("    	        });\r\n");
      out.write("    	    });\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    $('#my-chat-list > li').on('mouseover', function(event) {\r\n");
      out.write(" \r\n");
      out.write("        $(this).css({\r\n");
      out.write("      	  'background-color': '#e1e1e1'\r\n");
      out.write("        });\r\n");
      out.write("   \r\n");
      out.write("      }).on('mouseout', function() {\r\n");
      out.write("          $(this).css({\r\n");
      out.write("          	'background-color': 'white'\r\n");
      out.write("          });\r\n");
      out.write("      }).on('click', function(){\r\n");
      out.write("    	var roomNo = $(this).find('input').val();\r\n");
      out.write("    	//동적으로 messageList에도 말풍선 추가\r\n");
      out.write("		showMessage(roomNo);\r\n");
      out.write("		//해당 채팅방과 stomp 연결\r\n");
      out.write("		setChat(roomNo);\r\n");
      out.write("      });\r\n");
      out.write("    \r\n");
      out.write("  </script>\r\n");
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("    console.log($('.chat-dropdown > li:not(:nth-child(1))'))\r\n");
      out.write("    $('.chat-dropdown > li').on('mouseover', function() {\r\n");
      out.write("      $(this).css({\r\n");
      out.write("        'background-color': '#e1e1e1'\r\n");
      out.write("      })\r\n");
      out.write("    }).on('mouseout', function() {\r\n");
      out.write("      $(this).css({\r\n");
      out.write("        'background-color': 'white'\r\n");
      out.write("      })\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <script>\r\n");
      out.write("    $('.show').on('click', function() {\r\n");
      out.write("      $(this).hide();\r\n");
      out.write("      $(this).next().removeClass('d-none');\r\n");
      out.write("      $(this).next().next().removeClass('d-none');\r\n");
      out.write("      $(this).next().show();\r\n");
      out.write("      $(this).next().next().show();\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    $('.close').on('click', function() {\r\n");
      out.write("      $(this).hide();\r\n");
      out.write("      $(this).next().hide();\r\n");
      out.write("      $(this).prev().show();\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <script>\r\n");
      out.write("    $('#more').on('click', function() {\r\n");
      out.write("      var chatHeight = $('.chat').height();\r\n");
      out.write("      var chatMarginY = parseInt($('.chat').css('marginBottom').split('px')[0]) + parseInt($('.chat').css('marginTop').split('px'));\r\n");
      out.write("      var chatRowCount = Math.ceil($('.chat').length / 5);\r\n");
      out.write("      var chatBorder = parseInt($('.chat').css('border-width').split('px')[0]);\r\n");
      out.write("      console.log(chatBorder);\r\n");
      out.write("\r\n");
      out.write("      if ($(this).text().trim() === '전체 보기') {\r\n");
      out.write("        $('#chat-list').css({\r\n");
      out.write("          'height': (chatHeight + chatMarginY + (chatBorder * 2)) * chatRowCount + 'px'\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $(this).text('닫기');\r\n");
      out.write("      } else {\r\n");
      out.write("        $('#chat-list').css({\r\n");
      out.write("          'height': chatHeight + chatMarginY + 'px'\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $(this).text('전체 보기');\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <script>\r\n");
      out.write("    $(function() {\r\n");
      out.write("      $(\"nav ul a\").on(\"click\", function() {\r\n");
      out.write("        var position = $(this).parent().position();\r\n");
      out.write("        var width = $(this).parent().width();\r\n");
      out.write("\r\n");
      out.write("        $(\"nav ul .slide1\").css({\r\n");
      out.write("          opacity: 1,\r\n");
      out.write("          left: +position.left,\r\n");
      out.write("          width: width\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $(\"header nav ul a\").on(\"mouseover\", function() {\r\n");
      out.write("        var position = $(this).parent().position();\r\n");
      out.write("        var width = $(this).parent().width();\r\n");
      out.write("        $(\"header nav ul .slide2\").css({\r\n");
      out.write("          opacity: 1,\r\n");
      out.write("          left: +position.left,\r\n");
      out.write("          width: width\r\n");
      out.write("        }).addClass(\"squeeze\");\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $(\"header nav ul a\").on(\"mouseout\", function() {\r\n");
      out.write("        $(\"ul .slide2\").css({\r\n");
      out.write("          opacity: 0\r\n");
      out.write("        }).removeClass(\"squeeze\");\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      var currentWidth = $(\"header nav ul\").find(\"li:nth-of-type(3) a\").parent(\"li\").width();\r\n");
      out.write("      var current = $(\"header nav ul li:nth-of-type(3) a\").position();\r\n");
      out.write("      console.log(\"currentWidth  : \" + currentWidth);\r\n");
      out.write("      console.log(\"current.left : \" + current.left);\r\n");
      out.write("      $(\"header nav .slide1\").css({\r\n");
      out.write("        'left': current.left,\r\n");
      out.write("        'width': currentWidth\r\n");
      out.write("      });\r\n");
      out.write("    })\r\n");
      out.write("  </script>\r\n");
      out.write("  <!-- 알림 창 껏다 키기 -->\r\n");
      out.write("  <script>\r\n");
      out.write("    $(function() {\r\n");
      out.write("      var noticeClick = $('#noticeClick');\r\n");
      out.write("      var notice = $('#notice');\r\n");
      out.write("\r\n");
      out.write("      notice.hide();\r\n");
      out.write("\r\n");
      out.write("      noticeClick.on('click', function() {\r\n");
      out.write("        var display = notice.css('display');\r\n");
      out.write("\r\n");
      out.write("        if (display === 'none') {\r\n");
      out.write("          notice.show();\r\n");
      out.write("        } else {\r\n");
      out.write("          notice.hide();\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <script>\r\n");
      out.write("    $(function() {\r\n");
      out.write("      var profile_cilck = $('#profile-click');\r\n");
      out.write("      var clickShow = $('.controlDropdown').eq(1);\r\n");
      out.write("      var clickHide = $('.controlDropdown').eq(0);\r\n");
      out.write("      var userMenu = $('#usermenu-dropdown');\r\n");
      out.write("      var userProfile = $('#profile > img');\r\n");
      out.write("\r\n");
      out.write("      clickHide.hide();\r\n");
      out.write("      userMenu.hide();\r\n");
      out.write("\r\n");
      out.write("      profile_cilck.on('click', function() {\r\n");
      out.write("        if (clickShow.css('display') === 'none') {\r\n");
      out.write("          //닫아야 함\r\n");
      out.write("          clickHide.hide();\r\n");
      out.write("          clickShow.show();\r\n");
      out.write("          userMenu.hide();\r\n");
      out.write("        } else if (clickHide.css('display') === 'none') {\r\n");
      out.write("          //열어야 함\r\n");
      out.write("          clickShow.hide();\r\n");
      out.write("          clickHide.show();\r\n");
      out.write("          userMenu.show();\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /WEB-INF/views/chat/AdminChatManage.jsp(384,2) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("../common/menubar.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/chat/AdminChatManage.jsp(409,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chat/AdminChatManage.jsp(409,4) '${crList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${crList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/chat/AdminChatManage.jsp(409,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("cr");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("      <div class=\"chat rounded-circle overflow-hidden position-relative\">\r\n");
            out.write("        <img class=\"absolute-100\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/resources/muploadFiles/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cr.renameFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("        <div class=\"spin rounded-circle h-100 w-100 absolute-100\"></div>\r\n");
            out.write("        <input type=\"hidden\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cr.roomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("      </div>\r\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/chat/AdminChatManage.jsp(426,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chat/AdminChatManage.jsp(426,8) '${messageList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${messageList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/chat/AdminChatManage.jsp(426,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("message");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("        ");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("         ");
            if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/chat/AdminChatManage.jsp(427,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.id eq loginUser.id }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("          <li class=\"right\">\r\n");
          out.write("            <div class=\"right-speechAdmin\">\r\n");
          out.write("             	");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.message }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("            </div>\r\n");
          out.write("            <div class=\"chat-profile rounded-circle overflow-hidden\">	\r\n");
          out.write("              <img class=\"w-100 h-100\" src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/resources/muploadFiles/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.renameFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"\">\r\n");
          out.write("            </div>\r\n");
          out.write("            <input type=\"hidden\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${messageList[0].roomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"/>\r\n");
          out.write("          </li>\r\n");
          out.write("         ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/chat/AdminChatManage.jsp(438,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.id ne loginUser.id }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("          <li class=\"left\">\r\n");
          out.write("            <div class=\"chat-profile rounded-circle overflow-hidden\">	\r\n");
          out.write("              <img class=\"w-100 h-100\" src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/resources/muploadFiles/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.renameFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"\">\r\n");
          out.write("            </div> \r\n");
          out.write("            <div class=\"left-speechAdmin\">\r\n");
          out.write("             	");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.message }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("            </div>\r\n");
          out.write("            <input type=\"hidden\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${messageList[0].roomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"/>\r\n");
          out.write("          </li>\r\n");
          out.write("         ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/views/chat/AdminChatManage.jsp(461,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chat/AdminChatManage.jsp(461,7) '${myCrList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${myCrList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/chat/AdminChatManage.jsp(461,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("myCr");
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("        <li class=\"d-flex align-items-center p-4 position-relative\">\r\n");
            out.write("          <div class=\"chat-profile rounded-circle overflow-hidden\">\r\n");
            out.write("          	<input type=\"hidden\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myCr.roomNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"/>\r\n");
            out.write("            <img class=\"w-100 h-100\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/resources/muploadFiles/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myCr.renameFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" alt=\"\">\r\n");
            out.write("          </div>\r\n");
            out.write("          <div class=\"lasted-chat\">\r\n");
            out.write("            <h5 class=\"fw-bold\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myCr.nickName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" 고객님</h5>\r\n");
            out.write("          </div>\r\n");
            out.write("        </li>\r\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /WEB-INF/views/chat/AdminChatManage.jsp(476,2) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("../common/footer.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
