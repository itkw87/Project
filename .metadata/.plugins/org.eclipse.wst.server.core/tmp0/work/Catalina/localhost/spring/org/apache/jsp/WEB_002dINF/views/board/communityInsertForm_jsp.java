/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-07-12 14:43:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class communityInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1656294610000L));
    _jspx_dependants.put("jar:file:/C:/8_FinalProject_workspace/HomeArtAll/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("	<title>HomeArt - 커뮤니티</title>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<meta name=\"description\" content=\"WebUni Education Template\">\r\n");
      out.write("	<meta name=\"keywords\" content=\"webuni, education, creative, html\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("	<!-- Favicon -->   \r\n");
      out.write("	<link href=\"img/favicon.ico\" rel=\"shortcut icon\"/>\r\n");
      out.write("\r\n");
      out.write("	<!-- Google Fonts -->\r\n");
      out.write("	<link href=\"https://fonts.googleapis.com/css?family=Raleway:400,400i,500,500i,600,600i,700,700i,800,800i\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("	<!-- Stylesheets -->\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/community.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<!-- Page Preloder -->\r\n");
      out.write("	<div id=\"preloder\">\r\n");
      out.write("		<div class=\"loader\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	<!-- single course section -->\r\n");
      out.write("	<section class=\"single-course spad pb-0\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"course-warp-title\">\r\n");
      out.write("				<h2 id=\"top\">HomeArt 커뮤니티 게시판입니다!</h2>\r\n");
      out.write("				<p>정성들여 꾸민 집의 인테리어 사진을 공유해서 모두와 소통해봅시다!</p>\r\n");
      out.write("				<br>\r\n");
      out.write("			</div>\r\n");
      out.write("			<form action=\"communityInsert.bo\" method=\"post\" enctype=\"Multipart/form-data\">\r\n");
      out.write("			<div class=\"course-meta-area\">\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col-lg-10 offset-lg-1\">\r\n");
      out.write("						<br>\r\n");
      out.write("						<div id=\"course-title\">\r\n");
      out.write("							<input type=\"hidden\" name=\"writer\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ loginUser.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <!-- 로그인유저 닉네임 -->\r\n");
      out.write("							<input type=\"text\" name=\"boardTitle\" id=\"course-input\" placeholder=\"제목을 입력하세요.\" required=\"required\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"course-img\">\r\n");
      out.write("							<label for=\"uploadFile1\" id=\"inputLabel1\">사진을 첨부하려면 클릭하세요</label>\r\n");
      out.write("							<input type=\"file\" name=\"uploadFile1\" id=\"uploadFile1\" style=\"display:none\" accept=\"image/*\" required=\"required\">\r\n");
      out.write("							<div id=\"preview1\"></div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"course-img\">\r\n");
      out.write("							<label for=\"uploadFile2\" id=\"inputLabel2\">사진을 첨부하려면 클릭하세요</label>\r\n");
      out.write("							<input type=\"file\" name=\"uploadFile2\" id=\"uploadFile2\" style=\"display:none\" accept=\"image/*\" required=\"required\">\r\n");
      out.write("							<div id=\"preview2\"></div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"contact-form-warp\">\r\n");
      out.write("							<textarea id=\"course-textarea\" name=\"boardContent\" placeholder=\"내용을 입력하세요.\" required=\"required\"></textarea>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"community_btn\">\r\n");
      out.write("							<input type=\"submit\" value=\"등록\" id=\"submitBtn\" class=\"site-btn buy-btn\">\r\n");
      out.write("							<a href=\"communityList.bo\" class=\"site-btn price-btn\">취소</a>\r\n");
      out.write("							<br>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-lg-8\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"floating-button\" style=\"position:fixed; bottom:40px; right:30px;\">\r\n");
      out.write("			<a href=\"#top\" class=\"top-btn\">TOP</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("	<!-- single course section end -->\r\n");
      out.write("	\r\n");
      out.write("	<!--====== Javascripts & Jquery ======-->\r\n");
      out.write("	<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/community.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		$(document).ready(function (e){\r\n");
      out.write("	    	$(\"#uploadFile1\").change(function(e){\r\n");
      out.write("	\r\n");
      out.write("			//div 내용 비워주기\r\n");
      out.write("			$('#inputLabel1').empty();\r\n");
      out.write("			\r\n");
      out.write("			var files = e.target.files;\r\n");
      out.write("			var arr = Array.prototype.slice.call(files);\r\n");
      out.write("			\r\n");
      out.write("			//업로드 가능 파일인지 체크\r\n");
      out.write("			for(var i=0;i<files.length;i++){\r\n");
      out.write("				if(!checkExtension(files[i].name,files[i].size)){\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			preview(arr);\r\n");
      out.write("			});//file change\r\n");
      out.write("	    \r\n");
      out.write("			function checkExtension(fileName,fileSize){\r\n");
      out.write("				var regex = new RegExp(\"(.*?)\\.(exe|sh|zip|alz)$\");\r\n");
      out.write("				var maxSize = 20971520;  //20MB\r\n");
      out.write("				\r\n");
      out.write("				if(fileSize >= maxSize){\r\n");
      out.write("					alert('파일 사이즈 초과');\r\n");
      out.write("					$(\"#uploadFile1\").val(\"\");  //파일 초기화\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				if(regex.test(fileName)){\r\n");
      out.write("					alert('업로드 불가능한 파일이 있습니다.');\r\n");
      out.write("					$(\"#uploadFile1\").val(\"\");  //파일 초기화\r\n");
      out.write("					$(\"#uploadFile1\").append(\"<label for='uploadFile1' id='inputLabel1'>사진을 첨부하려면 클릭하세요</label>\");\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function preview(arr){\r\n");
      out.write("				arr.forEach(function(f){\r\n");
      out.write("					//div에 이미지 추가\r\n");
      out.write("					var str = '<div class=\"added\" style=\"display: inline-block; padding: 10px;\">';\r\n");
      out.write("					\r\n");
      out.write("					//이미지 파일 미리보기\r\n");
      out.write("					if(f.type.match('image.*')){\r\n");
      out.write("						var reader = new FileReader();\r\n");
      out.write("						reader.onload = function (e) { //파일 읽어들이기를 성공했을때 호출되는 이벤트 핸들러\r\n");
      out.write("							str += '<button type=\"button\" class=\"delBtn\" onclick=\"delImg(this)\">X</button>';\r\n");
      out.write("							str += '<img src=\"'+e.target.result+'\" width=400 height=300 />';\r\n");
      out.write("							str += '</div>';\r\n");
      out.write("							$(str).appendTo('#preview1');\r\n");
      out.write("						} \r\n");
      out.write("						reader.readAsDataURL(f);\r\n");
      out.write("					} else{\r\n");
      out.write("						str += '<img src=\"/resources/img/fileImg.png\" title=\"'+f.name+'\" width=400 height=300 />';\r\n");
      out.write("						$(str).appendTo('#preview1');\r\n");
      out.write("					}\r\n");
      out.write("				});//arr.forEach\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function delImg(_this){\r\n");
      out.write("				$(_this).parent().parent().parent().find('div').remove()\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		$(document).ready(function (e){\r\n");
      out.write("	    	$(\"#uploadFile2\").change(function(e){\r\n");
      out.write("	\r\n");
      out.write("			//div 내용 비워주기\r\n");
      out.write("			$('#inputLabel2').empty();\r\n");
      out.write("			\r\n");
      out.write("			var files = e.target.files;\r\n");
      out.write("			var arr = Array.prototype.slice.call(files);\r\n");
      out.write("			\r\n");
      out.write("			//업로드 가능 파일인지 체크\r\n");
      out.write("			for(var i=0;i<files.length;i++){\r\n");
      out.write("				if(!checkExtension(files[i].name,files[i].size)){\r\n");
      out.write("				return false;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			preview(arr);\r\n");
      out.write("			});//file change\r\n");
      out.write("	    \r\n");
      out.write("			function checkExtension(fileName,fileSize){\r\n");
      out.write("				var regex = new RegExp(\"(.*?)\\.(exe|sh|zip|alz)$\");\r\n");
      out.write("				var maxSize = 20971520;  //20MB\r\n");
      out.write("				\r\n");
      out.write("				if(fileSize >= maxSize){\r\n");
      out.write("					alert('파일 사이즈 초과');\r\n");
      out.write("					$(\"#uploadFile2\").val(\"\");  //파일 초기화\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				if(regex.test(fileName)){\r\n");
      out.write("					alert('업로드 불가능한 파일이 있습니다.');\r\n");
      out.write("					$(\"#uploadFile2\").val(\"\");  //파일 초기화\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function preview(arr){\r\n");
      out.write("				arr.forEach(function(f){\r\n");
      out.write("					//div에 이미지 추가\r\n");
      out.write("					var str = '<div class=\"added\" style=\"display: inline-block; padding: 10px;\">';\r\n");
      out.write("					\r\n");
      out.write("					//이미지 파일 미리보기\r\n");
      out.write("					if(f.type.match('image.*')){\r\n");
      out.write("						var reader = new FileReader();\r\n");
      out.write("						reader.onload = function (e) { //파일 읽어들이기를 성공했을때 호출되는 이벤트 핸들러\r\n");
      out.write("							str += '<button type=\"button\" class=\"delBtn\" onclick=\"delImg(this)\">X</button>';\r\n");
      out.write("							str += '<img src=\"'+e.target.result+'\" width=400 height=300 />';\r\n");
      out.write("							str += '</div>';\r\n");
      out.write("							$(str).appendTo('#preview2');\r\n");
      out.write("						} \r\n");
      out.write("						reader.readAsDataURL(f);\r\n");
      out.write("					} else{\r\n");
      out.write("						str += '<img src=\"/resources/img/fileImg.png\" title=\"'+f.name+'\" width=400 height=300 />';\r\n");
      out.write("						$(str).appendTo('#preview2');\r\n");
      out.write("					}\r\n");
      out.write("				});//arr.forEach\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function delImg(_this){\r\n");
      out.write("				$(_this).parent('div').remove()\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#submitBtn\").click(function(){\r\n");
      out.write("			if($(\"#course-input\").val().length < 1){\r\n");
      out.write("				alert(\"제목을 입력해 주세요\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if($(\"#course-textarea\").val().length < 1){\r\n");
      out.write("				alert(\"내용을 입력해 주세요\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if(!$(\"#uploadFile1\").val()){\r\n");
      out.write("				alert(\"첫번째 사진을 첨부해 주세요\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if(!$(\"#uploadFile2\").val()){\r\n");
      out.write("				alert(\"두번째 사진을 첨부해 주세요\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
